/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define fun 1

&mt {
    quick-tap-ms = <100>;
    require_prior_idle;
    flavor = "tap-preferred";
    tapping-term-ms = <180>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_capslock {
            bindings = <&caps_word>;
            key-positions = <13 16>;
            layers = <0>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //          ------------------------------------------------------------------------------------------------------------
            //          |quiet|!1 f1|@2 f2 |# 3 f3|$ 4 f4|% 5 f5|                                       | 6^ f6 |7&f7  |  8*f8 | 9f9   |0 f10 |   esc |
            //          |  ~` |  Q  |  W   |  F   |  P   |  G   |                                       | J     |  L   |  U    |  Y    |  klam| klam  |
            //          |  _- |  A  | R lef|S down| T ri |  D   |                                       | H     |  N   |  E    |  I    |  O   |   ' " |
            //          |macro|  z  |  x   |  C   |  V   |  B   |                                       | K <   |  M > |  =,   |  + .  |  /?  |   \|  |
            //                      | macro| Meta |  back| enter| Shft | space|          | space |  del | fn    |  tab |  Alt  |  ctrl |
            //                 

            bindings = <
&mt C_VOLUME_UP K_MUTE  &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &mt F4 NUMBER_4  &mt F5 NUMBER_5                                      &mt F6 NUMBER_6  &mt F7 NUMBER_7     &mt F8 NUMBER_8  &mt F9 NUMBER_9  &mt F11 NUMBER_0  &kp ESC
&mt LGUI LS(GRAVE)      &kp Q            &kp W            &kp F            &kp P            &kp G                                                &kp J            &kt L               &mt RCTRL U      &mt K_COPY Y     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp MINUS               &kp A            &kp R            &kp S            &kp T            &kp D                                                &kp H            &kp N               &kp LS(E)        &mt K_PASTE I    &kp O             &kp SQT
&kp C_BASS_BOOST        &kp Z            &kp X            &kp C            &kp V            &kp B                                                &mt LESS_THAN K  &mt GREATER_THAN M  &kt EQUAL        &mt PERIOD PLUS  &kp SLASH         &kp BSLH
                        &kp T            &to 1            &kp BACKSPACE    &kp ENTER        &kp LEFT_SHIFT   &kp SPACE    &kp SPACE  &kp DELETE  &kp RCTRL        &kp TAB             &kp RIGHT_ALT    &kp CAPSLOCK
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fun {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                            &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &to 0           &trans          &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };
};
